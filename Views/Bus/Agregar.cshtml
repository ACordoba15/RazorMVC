@model RazorMVC.Models.BusCLS

@{
    ViewBag.Title = "Agregar";
    List<SelectListItem> listaMarca = (List<SelectListItem>)ViewBag.listaMarca;
    List<SelectListItem> listaTipoBus = (List<SelectListItem>)ViewBag.listaTipoBus;
    List<SelectListItem> listaModelo = (List<SelectListItem>)ViewBag.listaModelo;
    List<SelectListItem> listaSucursal = (List<SelectListItem>)ViewBag.listaSucursal;
}

<h2>Agregar</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Agregar", "Bus", FormMethod.Post, new { @id = "frmAgregar" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>BusCLS</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.idSucursal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idSucursal", listaSucursal, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idSucursal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idTipoBus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idTipoBus", listaTipoBus, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idTipoBus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.placaBus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.placaBus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.placaBus, "", new { @class = "text-danger" })
                        @if (Model != null && Model.mensajeError != null)
                        {
                            @Html.Label(Model.mensajeError, new { @class = "text-danger" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechaCompra, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaCompra, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechaCompra, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idModelo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idModelo", listaModelo, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idModelo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numFilas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numFilas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numFilas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numColumnas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numColumnas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numColumnas, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idMarca, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idMarca", listaMarca, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idMarca, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" data-toggle="modal" data-target="#exampleModal" class="btn btn-primary">
                            Guardar
                        </button>
                        @Html.ActionLink("Volver", "Index", "Bus", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>

</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">¿Desea guardar los cambios?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div style="padding: 1em">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" onclick="Agregar()" class="btn btn-primary">Aceptar</button>
            </div>
        </div>
    </div>
</div>

<script>
    function Agregar()
    {
        var frmAgregar = document.getElementById("frmAgregar");
        frmAgregar.submit();
    }
</script>
